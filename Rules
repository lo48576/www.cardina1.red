#!/usr/bin/env ruby

# Copied from <https://github.com/nanoc/nanoc/blob/70b5726576c79f2eaf0c258c225fe8948dbe324a/lib/nanoc/filters/relativize_paths.rb>.
XHTML_RELPATH_SELECTORS = ['*/@href', '*/@src', 'object/@data', 'param[@name="movie"]/@content', 'form/@action', 'comment()'].freeze

# sass partials.
ignore '/**/_*'

compile '/tags/data/*.xml' do
  layout '/xsl/docbook-article.xsl'
  filter :colorize_syntax, default_colorizer: :pygmentsrb, syntax: :xml
  layout '/tag-page.xhtml'
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS
end

compile '/index.xhtml' do
  layout '/page-base.*'
  write '/index.xhtml'
end

compile '/assets/**/*.scss' do
  filter :sass, syntax: :scss
  filter :relativize_paths, type: :css
  write item.identifier.without_ext + '.css'
end

compile '/**/*.xml' do
  format = -> target {
    -> f { f === target || f.include?(target) }
  }
  case @item[:format]
  when format('docbook') then
    layout '/xsl/docbook-article.xsl'
  else
    raise RuntimeError.new("Unknown page format: #{@item[:format]}")
  end

  filter :colorize_syntax, default_colorizer: :pygmentsrb, syntax: :xml

  case @item[:kind]
  when 'page' then
    layout '/page-base.xhtml'
  when 'article' then
    layout '/article.xhtml'
  else
    raise RuntimeError.new("Unknown page kind: #{@item[:kind]}")
  end

  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS

  if item.identifier.without_ext == '/index'
    write '/index.xhtml'
  else
    write item.identifier.without_ext + '/index.xhtml'
  end
end

compile '/**/*.xhtml' do
  layout '/page-base.*'

  filter :colorize_syntax, default_colorizer: :pygmentsrb, syntax: :xml
  filter :relativize_paths, type: :xml, select: XHTML_RELPATH_SELECTORS

  if item.identifier.without_ext == '/index'
    write '/index.xhtml'
  else
    write item.identifier.without_ext + '/index.xhtml'
  end
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/xsl/**/*.xsl', :lo48576_xsl

layout '/**/*', :erb, trim_mode: '-'

layout '/**/*', :erb
